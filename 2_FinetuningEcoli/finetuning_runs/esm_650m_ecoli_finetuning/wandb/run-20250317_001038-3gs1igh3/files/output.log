2025-03-17 00:10:39,410 INFO: Training configuration saved to runs/esm_650m_ecoli_finetuning/train_config.yaml
2025-03-17 00:10:40,273 INFO: LoRA integration complete for the ESM model.
2025-03-17 00:10:40,348 INFO: Loaded 12000 training and 1500 evaluation sequences.
2025-03-17 00:10:40,348 INFO: Adjusted max_length from 1026 to 1024 to be a multiple of 8
2025-03-17 00:10:40,348 INFO: Using masked language modeling (MLM) data collator for ESM model.
No label_names provided for model class `PeftModelForCausalLM`. Since `PeftModel` hides base models input arguments, if label_names is not given, label_names can't be set automatically within `Trainer`. Note that empty label_names list will be used instead.
  0%|                                                                                                | 0/18700 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/idies/workspace/Storage/sdowell/persistent/ALEdb/BenchmarkingFinetuning/finetuneESM2_ProGen2_LoRA.py", line 529, in <module>
    main()
  File "/home/idies/workspace/Storage/sdowell/persistent/ALEdb/BenchmarkingFinetuning/finetuneESM2_ProGen2_LoRA.py", line 508, in main
    train_result = trainer.train(resume_from_checkpoint=checkpoint)
  File "/home/idies/miniconda3/lib/python3.9/site-packages/transformers/trainer.py", line 2241, in train
    return inner_training_loop(
  File "/home/idies/miniconda3/lib/python3.9/site-packages/transformers/trainer.py", line 2548, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/idies/miniconda3/lib/python3.9/site-packages/transformers/trainer.py", line 3740, in training_step
    self.accelerator.backward(loss, **kwargs)
  File "/home/idies/miniconda3/lib/python3.9/site-packages/accelerate/accelerator.py", line 2355, in backward
    self.scaler.scale(loss).backward(**kwargs)
  File "/home/idies/miniconda3/lib/python3.9/site-packages/torch/_tensor.py", line 626, in backward
    torch.autograd.backward(
  File "/home/idies/miniconda3/lib/python3.9/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/idies/miniconda3/lib/python3.9/site-packages/torch/autograd/graph.py", line 823, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn
